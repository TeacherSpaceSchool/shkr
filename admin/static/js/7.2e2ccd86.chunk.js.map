{"version":3,"sources":["component/Dialog.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_3___default","react_redux__WEBPACK_IMPORTED_MODULE_4__","redux__WEBPACK_IMPORTED_MODULE_5__","_redux_actions_mini_dialog__WEBPACK_IMPORTED_MODULE_6__","_redux_actions_table__WEBPACK_IMPORTED_MODULE_7__","MyDialog","React","memo","props","_props$mini_dialog","mini_dialog","title","child","show","showMiniDialog","mini_dialogActions","setSelected","tableActions","a","createElement","open","onClose","aria-labelledby","aria-describedby","connect","state","dispatch","bindActionCreators"],"mappings":"yFAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,KAAAS,EAAAT,EAAAK,EAAAG,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAK,EAAAK,GAAAE,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,GAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,IASMgB,EAAYC,IAAMC,KACpB,SAACC,GAAS,IAAAC,EACyBD,EAAME,YAA7BC,EADFF,EACEE,MAAOC,EADTH,EACSG,MAAOC,EADhBJ,EACgBI,KACdC,EAAmBN,EAAMO,mBAAzBD,eACAE,EAAgBR,EAAMS,aAAtBD,YACR,OACQvB,EAAAyB,EAAAC,cAACvB,EAAAsB,EAAD,CACIE,KAAMP,EACNQ,QAAS,WAAKL,GAAa,GAAIF,GAAe,IAC9CQ,kBAAgB,qBAChBC,mBAAiB,4BACjB9B,EAAAyB,EAAAC,cAACnB,EAAAkB,EAAD,CAAaG,QAAS,WAAKL,GAAa,GAAIF,GAAe,KAAUH,GACrElB,EAAAyB,EAAAC,cAACrB,EAAAoB,EAAD,KACKN,MAoBVY,sBAbf,SAA0BC,GACtB,MAAO,CACHf,YAAae,EAAMf,cAI3B,SAA4BgB,GACxB,MAAO,CACHT,aAAcU,YAAmBV,EAAcS,GAC/CX,mBAAoBY,YAAmBZ,EAAoBW,KAIpDF,CAA6CnB","file":"static/js/7.2e2ccd86.chunk.js","sourcesContent":["import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport * as tableActions from '../redux/actions/table'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, child, show } = props.mini_dialog;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected } = props.tableActions;\r\n        return (\r\n                <Dialog\r\n                    open={show}\r\n                    onClose={()=>{setSelected(-1); showMiniDialog(false)}}\r\n                    aria-labelledby='alert-dialog-title'\r\n                    aria-describedby='alert-dialog-description'>\r\n                    <DialogTitle onClose={()=>{setSelected(-1); showMiniDialog(false)}}>{title}</DialogTitle>\r\n                    <DialogContent>\r\n                        {child}\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);"],"sourceRoot":""}